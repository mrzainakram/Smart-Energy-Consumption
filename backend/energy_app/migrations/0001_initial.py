# Generated by Django 5.2.4 on 2025-07-22 12:13

import django.contrib.auth.models
import django.contrib.auth.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appliance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100)),
                ('category', models.CharField(choices=[('cooling', 'Cooling'), ('heating', 'Heating'), ('kitchen', 'Kitchen'), ('laundry', 'Laundry'), ('entertainment', 'Entertainment'), ('lighting', 'Lighting'), ('other', 'Other')], max_length=50)),
                ('typical_wattage', models.IntegerField()),
                ('usage_hours_per_day', models.FloatField(default=8.0)),
                ('efficiency_rating', models.CharField(blank=True, max_length=10)),
                ('icon', models.CharField(blank=True, max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ElectricityProvider',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50)),
                ('full_name', models.CharField(max_length=200)),
                ('region', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('phone', models.CharField(blank=True, max_length=20, null=True)),
                ('is_email_verified', models.BooleanField(default=False)),
                ('is_phone_verified', models.BooleanField(default=False)),
                ('profile_picture', models.ImageField(blank=True, null=True, upload_to='profile_pics/')),
                ('date_of_birth', models.DateField(blank=True, null=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('signup_platform', models.CharField(choices=[('android', 'Android'), ('ios', 'iOS'), ('macos', 'macOS'), ('windows', 'Windows'), ('web', 'Web Browser'), ('linux', 'Linux')], default='web', max_length=20)),
                ('last_login_platform', models.CharField(blank=True, max_length=20, null=True)),
                ('device_info', models.JSONField(blank=True, default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BillPrediction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('predicted_units', models.FloatField()),
                ('predicted_amount', models.FloatField()),
                ('prediction_date', models.DateTimeField(auto_now_add=True)),
                ('accuracy', models.FloatField(blank=True, null=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'bill_predictions',
            },
        ),
        migrations.CreateModel(
            name='ChatHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('message', models.TextField()),
                ('response', models.TextField()),
                ('context', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='chat_history', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='EnergyConsumption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateField()),
                ('units_consumed', models.FloatField()),
                ('bill_amount', models.FloatField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'energy_consumption',
            },
        ),
        migrations.CreateModel(
            name='OTP',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('otp_code', models.CharField(max_length=6)),
                ('purpose', models.CharField(choices=[('signup', 'Signup Verification'), ('login', 'Login Verification'), ('password_reset', 'Password Reset'), ('email_change', 'Email Change')], max_length=20)),
                ('is_used', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('expires_at', models.DateTimeField()),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='otps', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PredictionHistory',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('predicted_units', models.FloatField()),
                ('predicted_cost', models.DecimalField(decimal_places=2, max_digits=10)),
                ('prediction_month', models.DateField()),
                ('prediction_year', models.IntegerField()),
                ('confidence_score', models.FloatField()),
                ('model_used', models.CharField(max_length=50)),
                ('input_data', models.JSONField()),
                ('slab_breakdown', models.JSONField(blank=True, null=True)),
                ('peak_hours_breakdown', models.JSONField(blank=True, null=True)),
                ('recommendations', models.JSONField(blank=True, null=True)),
                ('appliances_breakdown', models.JSONField(blank=True, null=True)),
                ('actual_units', models.FloatField(blank=True, null=True)),
                ('actual_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='energy_app.electricityprovider')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='predictions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='TariffSlab',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('slab_min', models.IntegerField()),
                ('slab_max', models.IntegerField()),
                ('rate_per_unit', models.DecimalField(decimal_places=4, max_digits=8)),
                ('fixed_charges', models.DecimalField(decimal_places=2, default=0, max_digits=8)),
                ('is_peak_hour', models.BooleanField(default=False)),
                ('effective_from', models.DateField()),
                ('effective_to', models.DateField(blank=True, null=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tariff_slabs', to='energy_app.electricityprovider')),
            ],
            options={
                'ordering': ['provider', 'slab_min'],
            },
        ),
        migrations.CreateModel(
            name='UserPreferences',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('notification_threshold', models.DecimalField(decimal_places=2, default=5000, max_digits=10)),
                ('preferred_currency', models.CharField(default='PKR', max_length=3)),
                ('timezone', models.CharField(default='Asia/Karachi', max_length=50)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('prediction_frequency', models.CharField(choices=[('weekly', 'Weekly'), ('monthly', 'Monthly'), ('manual', 'Manual Only')], default='monthly', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('default_provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='energy_app.electricityprovider')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='preferences', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BillData',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('bill_month', models.DateField()),
                ('units_consumed', models.FloatField()),
                ('amount_paid', models.DecimalField(decimal_places=2, max_digits=10)),
                ('peak_units', models.FloatField(default=0)),
                ('off_peak_units', models.FloatField(default=0)),
                ('bill_pdf', models.FileField(blank=True, null=True, upload_to='bills/')),
                ('meter_reading_start', models.FloatField(blank=True, null=True)),
                ('meter_reading_end', models.FloatField(blank=True, null=True)),
                ('tariff_slab', models.CharField(blank=True, max_length=20)),
                ('weather_avg_temp', models.FloatField(blank=True, null=True)),
                ('house_occupancy', models.IntegerField(default=1)),
                ('house_size_sqft', models.IntegerField(blank=True, null=True)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bills', to=settings.AUTH_USER_MODEL)),
                ('provider', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='energy_app.electricityprovider')),
            ],
            options={
                'ordering': ['-bill_month'],
                'unique_together': {('user', 'bill_month')},
            },
        ),
        migrations.CreateModel(
            name='PeakHourSchedule',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('day_type', models.CharField(choices=[('weekday', 'Monday to Friday'), ('weekend', 'Saturday and Sunday'), ('holiday', 'Public Holidays')], max_length=20)),
                ('peak_start_time', models.TimeField()),
                ('peak_end_time', models.TimeField()),
                ('season', models.CharField(choices=[('summer', 'Summer (Apr-Sep)'), ('winter', 'Winter (Oct-Mar)')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('provider', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='peak_schedules', to='energy_app.electricityprovider')),
            ],
            options={
                'unique_together': {('provider', 'day_type', 'season')},
            },
        ),
        migrations.CreateModel(
            name='UserAppliance',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.IntegerField(default=1)),
                ('custom_usage_hours', models.FloatField(blank=True, null=True)),
                ('is_smart', models.BooleanField(default=False)),
                ('purchase_date', models.DateField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('appliance', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='energy_app.appliance')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='appliances', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'unique_together': {('user', 'appliance')},
            },
        ),
    ]
